/* ---- File: static/styles.css ---- */

/* Placeholder for application styles */
/* TODO: Set up TailwindCSS build process (e.g., using Tailwind CLI) */
/* For now, copy minimal necessary styles or use CDN temporarily */

body {
    font-family: sans-serif;
    margin: 0;
    background-color: #f9fafb; /* bg-gray-50 */
    color: #1f2937; /* text-gray-800 */
}

.container {
    max-width: 1024px; /* Example */
    margin-left: auto;
    margin-right: auto;
    padding: 1rem;
}

/* Add some basic button styling if Tailwind isn't fully built */
.btn {
    display: inline-block;
    padding: 0.5rem 1rem;
    background-color: #3b82f6; /* bg-blue-500 */
    color: white;
    text-decoration: none;
    border-radius: 0.375rem; /* rounded-md */
    border: none;
    cursor: pointer;
    transition: background-color 0.2s;
    font-weight: 500;
}

.btn:hover {
    background-color: #2563eb; /* bg-blue-600 */
}

/* Basic card styling (example) */
.card {
    border: 1px solid #e5e7eb; /* border-gray-200 */
    padding: 1.5rem;
    border-radius: 0.5rem; /* rounded-lg */
    background-color: white;
    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06); /* shadow-md */
}

/* Add other necessary base styles here if not using full Tailwind build */
h1 { font-size: 1.875rem; font-weight: bold; margin-bottom: 1rem; }
h3 { font-size: 1.25rem; font-weight: bold; margin-bottom: 0.75rem; }
p { margin-bottom: 1rem; }
pre { white-space: pre-wrap; }
label { display: block; margin-bottom: 0.25rem; }
input[type="radio"] { margin-right: 0.5rem; }
input[type="text"], input[type="password"], textarea { /* Basic input styling */
    width: 100%;
    padding: 0.5rem;
    border: 1px solid #d1d5db; /* border-gray-300 */
    border-radius: 0.375rem; /* rounded-md */
    margin-bottom: 1rem;
}

/* Add Tailwind utility classes used directly in templates if not using build */
/* This part becomes very tedious manually, highlighting the need for a build tool */
.text-xl { font-size: 1.25rem; }
.font-bold { font-weight: 700; }
.mb-3 { margin-bottom: 0.75rem; }
.text-blue-600 { color: #2563eb; }
.bg-blue-200 { background-color: #bfdbfe; }
.h-2 { height: 0.5rem; }
.rounded { border-radius: 0.25rem; }
.w-full { width: 100%; }
.mb-4 { margin-bottom: 1rem; }
.text-gray-700 { color: #374151; }
.font-medium { font-weight: 500; }
.text-sm { font-size: 0.875rem; }
.text-gray-500 { color: #6b7280; }
.mt-4 { margin-top: 1rem; }
.p-4 { padding: 1rem; }
.bg-white { background-color: white; }
.rounded-lg { border-radius: 0.5rem; }
.border { border-width: 1px; }
.border-blue-200 { border-color: #bfdbfe; }
.shadow-md { box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06); }
/* ... Add many more Tailwind classes used ... */
.text-red-600 { color: #dc2626; }
.bg-red-50 { background-color: #fef2f2; }
.border-red-200 { border-color: #fecaca; }
.text-red-800 { color: #991b1b; }
.bg-gray-50 { background-color: #f9fafb; }
.border-gray-200 { border-color: #e5e7eb; }
.whitespace-pre-wrap { white-space: pre-wrap; }
/* Styles for radio button layout */
.flex { display: flex; }
.items-center { align-items: center; }
.space-y-2 > :not([hidden]) ~ :not([hidden]) { margin-top: 0.5rem; }
.shadow-sm { box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05); }
.mb-6 { margin-bottom: 1.5rem; }
.block { display: block; }
.text-gray-600 { color: #4b5563; }
.focus\:outline-none:focus { outline: 2px solid transparent; outline-offset: 2px; }
.focus\:ring-2:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000); }
.focus\:ring-blue-500:focus { --tw-ring-color: #3b82f6; }
.text-xs { font-size: 0.75rem; }
.hover\:bg-blue-700:hover { background-color: #1d4ed8; }
.transition { transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms; }
.duration-200 { transition-duration: 200ms; }
.ml-2 { margin-left: 0.5rem; }
.mt-6 { margin-top: 1.5rem; }
.max-w-lg { max-width: 32rem; }
.mx-auto { margin-left: auto; margin-right: auto; }
.p-6 { padding: 1.5rem; }
.bg-gray-100 { background-color: #f3f4f6; }
.rounded-xl { border-radius: 0.75rem; }
.shadow-lg { box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05); }
.container { width: 100%; } /* Ensure container takes width */
@media (min-width: 640px) { .container { max-width: 640px; } }
@media (min-width: 768px) { .container { max-width: 768px; } }
@media (min-width: 1024px) { .container { max-width: 1024px; } }
@media (min-width: 1280px) { .container { max-width: 1280px; } }
@media (min-width: 1536px) { .container { max-width: 1536px; } }
.mt-8 { margin-top: 2rem; }
.text-2xl { font-size: 1.5rem; }
.text-gray-800 { color: #1f2937; }
.text-center { text-align: center; }
.p-8 { padding: 2rem; }

/* HTMX Indicator Styles (If using one) */
.htmx-indicator { display: none; }
.htmx-request .htmx-indicator { display: inline; } /* Or block, depending on element */
.htmx-request.htmx-indicator { display: inline; } /* Can target element with class too */